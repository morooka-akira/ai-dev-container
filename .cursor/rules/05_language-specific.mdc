---
description:
globs:
alwaysApply: true
---

# 言語固有の設定

## 回答言語

**回答は日本語で答えてください**

## Rust Edition

プロジェクトはRust 2024 editionを使用しています。

## 標準的なRust/Cargoの慣習

プロジェクトは標準的なRust/Cargoの慣習に従います：

- `Cargo.toml`: プロジェクトマニフェストと依存関係
- `src/main.rs`: アプリケーションエントリポイント
- `src/lib.rs`: ライブラリのエントリポイント（該当する場合）
- モジュール構造は機能別に分割

## コーディング規約

### 命名規則
- 関数名: snake_case
- 構造体名: PascalCase  
- 定数: SCREAMING_SNAKE_CASE
- モジュール名: snake_case

### エラーハンドリング
- `Result<T, E>`型を適切に使用
- `?`演算子でエラー伝播
- 具体的なエラーメッセージを提供

### 非同期処理
- 必要に応じて`async/await`を使用
- `tokio`ランタイムを使用

### テスト
- 単体テストは各モジュール内の`#[cfg(test)]`モジュール
- 統合テストは`tests/`ディレクトリ
- `cargo test`で全テスト実行